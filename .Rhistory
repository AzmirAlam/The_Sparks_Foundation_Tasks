#Import dataset and preview.
#install.packages("readr")
library(readr)
#Import dataset and preview.
install.packages("readr")
#Import dataset and preview.
#install.packages("readr")
library(readr)
data <- 	read_csv("/Users/hp/OneDrive - ku.ac.bd/Documents/Internship/student_scores - student_scores.csv",show_col_types=FALSE)
#Import dataset and preview.
#install.packages("readr")
library(readr)
data <- 	read_csv("/G:/projectR/internR/student_scores - student_scores.csv",show_col_types=FALSE)
#Import dataset and preview.
#install.packages("readr")
library(readr)
data <- 	read_csv("student_scores - student_scores.csv",show_col_types=FALSE)
data
head(data)
#Draw a plot of the data.
ggplot(data,aes(Hours,Scores))+geom_point()
#Draw a plot of the data.
install.packages("ggplot2")
ggplot(data,aes(Hours,Scores))+geom_point()
#Draw a plot of the data.
ggplot(data,aes(Hours,Scores))+geom_point()
#Draw a plot of the data.
install.packages("ggplot2")
ggplot(data,aes(Hours,Scores))
#Draw a plot of the data.
#install.packages("ggplot2")
ggplot(data,aes(Hours,Scores))
#Draw a plot of the data.
#install.packages("ggplot2")
ggplot2(data,aes(Hours,Scores))
#Draw a plot of the data.
#install.packages("ggplot2")
#ggplot2(data,aes(Hours,Scores))
plot(data, newpage = is.null(vp), vp = NULL, ...)
#Draw a plot of the data.
#install.packages("ggplot2")
#ggplot2(data,aes(Hours,Scores))
plot(data, newpage = is.null(vp), vp = NULL)
#Draw a plot of the data.
#install.packages("ggplot2")
#ggplot2(data,aes(Hours,Scores))
plot(data)
#Draw a plot of the data.
#install.packages("ggplot2")
#plot(data)
for (colour in colours) {
print(ggplot(data, aes_(~ Scores, ~ Hours, colour = colour)) +
geom_point())
}
#Draw a plot of the data.
#install.packages("ggplot2")
#plot(data)
for (colour in colours)
print(ggplot(data, aes_(~ Scores, ~ Hours, colour = colour)) +
geom_point())
#Draw a plot of the data.
#install.packages("ggplot2")
#plot(data)
print(ggplot(data, aes_(~ Scores, ~ Hours, colour = colour)) +
geom_point())
#Draw a plot of the data.
#install.packages("ggplot2")
plot(data)
#Describe the dataset.
dim(data)
summary(data)
#checking correlation.
data=data.frame(data,check.rows = TRUE)
cor(data)
#Create model.
fit_1<- lm(Scores~Hours,data=data)
summary(fit_1)
#Create model.
fit_1<- lm(Scores~Hours,data=data)
summary(fit_1)
#Spliting train and test data set.
library(caTools)
#Spliting train and test data set.
install.packages("carTools")
#Spliting train and test data set.
install.packages("caTools")
library(caTools)
set.seed(42)
sampleSplit <- sample.split(Y=data$Scores, SplitRatio=0.7)
trainSet <- subset(x=data, sampleSplit==TRUE)
testSet <- subset(x=data, sampleSplit==FALSE)
print(dim(trainSet))
print(dim(testSet))
model <- lm(Scores ~ Hours , data=trainSet)
#Spliting train and test data set.
#install.packages("caTools")
library(caTools)
set.seed(42)
sampleSplit <- sample.split(Y=data$Scores, SplitRatio=0.7)
trainSet <- subset(x=data, sampleSplit==TRUE)
testSet <- subset(x=data, sampleSplit==FALSE)
print(dim(trainSet))
print(dim(testSet))
model <- lm(Scores ~ Hours , data=trainSet)
library(ggplot2)
modelResiduals <- as.data.frame(residuals(model))
ggplot(modelResiduals, aes(residuals(model))) +
geom_histogram(fill='68', color='black')
#Visualize the regression line.
library(ggplot2)
ggplot(data, aes(x = Hours, y = Scores)) +
geom_point(aes(color = Scores)) +
stat_smooth(method = "lm",
col = "orange", se = FALSE, size = .5
)
# comparing the predicted with actual value.
pred <- predict(model, testSet)
results <- cbind(pred,testSet$Scores)
colnames(results) <- c('pred','real')
results <- as.data.frame(results)
results
#prediction of score when a student study 9.25 hrs per day.
Hours <- 9.5
Hours <-as.data.frame(Hours)
predicted_score <- predict(model, Hours)
print(predicted_score)
#install.packages("readr")
library(readr)
data <- 	read_csv("student_scores - student_scores.csv",show_col_types=FALSE)
#install.packages("readr")
library(readr)
data <- 	read_csv("student_scores - student_scores.csv",show_col_types=FALSE)
data
head(data)
#install.packages("ggplot2")
plot(data)
#install.packages("readr")
library(readr)
data <- 	read_csv("student_scores - student_scores.csv",show_col_types=FALSE)
data
head(data)
#install.packages("ggplot2")
plot(data)
dim(data)
summary(data)
data=data.frame(data,check.rows = TRUE)
cor(data)
fit_1<- lm(Scores~Hours,data=data)
summary(fit_1)
#install.packages("caTools")
library(caTools)
set.seed(42)
sampleSplit <- sample.split(Y=data$Scores, SplitRatio=0.7)
trainSet <- subset(x=data, sampleSplit==TRUE)
testSet <- subset(x=data, sampleSplit==FALSE)
print(dim(trainSet))
print(dim(testSet))
model <- lm(Scores ~ Hours , data=trainSet)
library(ggplot2)
modelResiduals <- as.data.frame(residuals(model))
ggplot(modelResiduals, aes(residuals(model))) +
geom_histogram(fill='68', color='black')
library(ggplot2)
ggplot(data, aes(x = Hours, y = Scores)) +
geom_point(aes(color = Scores)) +
stat_smooth(method = "lm",
col = "orange", se = FALSE, size = .5
)
pred <- predict(model, testSet)
results <- cbind(pred,testSet$Scores)
colnames(results) <- c('pred','real')
results <- as.data.frame(results)
results
Hours <- 9.5
Hours <-as.data.frame(Hours)
predicted_score <- predict(model, Hours)
print(predicted_score)
